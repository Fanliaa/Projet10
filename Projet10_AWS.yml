#########################################################################
#                     Projet 10 OpenClassRooms - AWS                    #
#########################################################################

# Initialisation du template
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation VPC + Infrastructure Template P10


########## Definition des Ressources necessaires pour notre reseau ##########

Resources:

# Creation de notre VPC
  MonVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: 172.18.1.0/24
      Tags:
        - Key: Name
          Value: "MonVPC"

########## Creation de nos sous-reseaux prives et publics ##########

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-3a
      CidrBlock: !Select [0, !Cidr [!GetAtt MonVPC.CidrBlock, 5, 5]]
      Tags:
        - Key: Name
          Value: "MainVPC-private-a"
      VpcId: !Ref MonVPC
      
  PrivateSubnetB:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: eu-west-3b
        CidrBlock: !Select [1, !Cidr [!GetAtt MonVPC.CidrBlock, 5, 5]]
        Tags:
          - Key: Name
            Value: "MainVPC-private-b"
        VpcId: !Ref MonVPC

          
  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-3c
      CidrBlock: !Select [2, !Cidr [!GetAtt MonVPC.CidrBlock, 5, 5]]
      Tags:
        - Key: Name
          Value: "MainVPC-private-c"
      VpcId: !Ref MonVPC
        
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-3a
      CidrBlock: !Select [3, !Cidr [!GetAtt MonVPC.CidrBlock, 5, 5]]
      Tags:
        - Key: Name
          Value: "MainVPC-public-a"
      VpcId: !Ref MonVPC
      
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-3b
      CidrBlock: !Select [4, !Cidr [!GetAtt MonVPC.CidrBlock, 5, 5]]
      Tags:
        - Key: Name
          Value: "MainVPC-public-b"
      VpcId: !Ref MonVPC

########## Creation de la passerelle internet ##########

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: "MainVPC-InternetGateway"

# Rattachement de la passerelle internet
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MonVPC
      InternetGatewayId: !Ref InternetGateway

########## Definition de la table de routage ##########

# Table de routage pour le sous-reseau A
  PublicRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MonVPC
      Tags:
        - Key: Name
          Value: MainVPC-route-public-a
  
  AttachPublicRouteTableA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTableA
      SubnetId: !Ref PublicSubnetA

  PublicRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTableA

# Table de routage pour le sous-reseau B
  PublicRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MonVPC
      Tags:
        - Key: Name
          Value: MainVPC-route-public-b
    
  AttachPublicRouteTableB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTableB
      SubnetId: !Ref PublicSubnetB

  PublicRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTableB

########## Definition de la table de routage privee ##########

# # Table de routage pour le sous-reseau prive A
#   PrivateRouteTableA:
#     Type: AWS::EC2::RouteTable
#     Properties:
#       VpcId: !Ref MonVPC
#       Tags:
#         - Key: Name
#           Value: MainVPC-route-private-a

#   AttachPrivateRouteTableA:
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       RouteTableId: !Ref PrivateRouteTableA
#       SubnetId: !Ref PrivateSubnetA

#   PrivateRouteA:
#     Type: AWS::EC2::Route
#     Properties:
#       DestinationCidrBlock: 0.0.0.0/0
#       RouteTableId: !Ref PrivateRouteTableA

# Creation du groupe de securite (firewall virtuel)
  WebsiteEC2SecurityGroup:
    Type:  AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Website EC2 Security Group
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 53
          ToPort: 53
          CidrIp: 0.0.0.0/0
      VpcId: !Ref MonVPC